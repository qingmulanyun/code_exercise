continue
params[:contact].as_json.tempfile
params[:contact].as_json[:tempfile]
params[:contact].as_json[:contact]
params[:contact].as_json.class
params[:contact].as_json.contact
params[:contact].as_json
params[:contact].class
params[:contact][0]
params[:contact].contact
params[:contact]
params[:contact].class
params[:contact].methods
params[:contact].
params[:contact].to_h
params[:contact].methods
params[:contact]
continue
params[:contact].methods
params[:contact].tempfile
params[:contact]
params[:contact].class
params[:contact].open
params[:contact].read
params[:contact]
params[:contact].[title]
params[:contact].[:title]
params[:contact].title
params[:contact]
params[:contact].fetch
params[:contact].tempfile
params[:contact].methods
params
@contents = params[:contact].read
continue
params
params[:@tempfile]
params[:title]
params
 @contents = params[:title].read
continue
params
continue
 @contents = params[:uploaded_file].read
continue
@contents = params[:uploaded_file].read
continue
params
continue
info_array
continue
csv.to_a.map {|row| row.to_hash }
csv = CSV.new(body, :headers => true, :header_converters => :symbol, :converters => [:all, :blank_to_nil])
body = File.open(file_path, "r:ISO-8859-1")
continue
File.exist?(file_path)
